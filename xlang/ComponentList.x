/*** Generated by xlang extension for XStudio
Thu Jul 21:36:14 2025
  ***/


class ComponentList : ComponentList_internal {
    Vector<DrawObject> objs = nilptr;
    DrawObject [] doa;
    TradingView tv;
    
    public ComponentList (TradingView parent, Vector<DrawObject> _o) {
        objs = _o;
        tv = parent;
    }

    bool onInitializ() override {
        treeWidget.setColumns (new String[] {"对象", "类型"});
        int idx = 0;
        
        for (DrawObject dos : objs) {
            TVToolBar.getComponentImageFile (dos.getType() );
            OBJECT_TYPE ot = dos.getType();
            long item = treeWidget.addItem (TVToolBar.getComponentImageFile (ot), TVToolBar.getComponentPrefix (ot) + "_" + dos.hash() );
            treeWidget.setItemText (item, 1, TVToolBar.getComponentTypeString (ot) );
            treeWidget.setItemTag (item, 0, idx);
            idx++;
        }
        setWindowTitle("对象列表");
        setWindowIcon(AssetsManager.getResource("res/toolbar/extern.png"));
        doa = objs.toArray (new DrawObject[0]);
        return true;
    }
    

    public static void showComponent (TradingView parent, TradingData data, bool isIndic/* 是否显示指标 */) {
        Vector<DrawObject> objs = data.getDrawableObjects();
        ComponentList ctl = new ComponentList (parent, objs);

        if (ctl.create (parent) ) {
            ctl.exec();
        }
    }

    protected void on_pushButton_Click (QObject obj, bool checked) override {
        long item = treeWidget.getSelItem();
        if (item != 0) {
            int id = treeWidget.getItemTag(item, 0);
            doa[id].onRemove(tv);
            objs.remove(doa[id]);
            treeWidget.removeItem(item);
        }
    }



    protected void on_btnok_Click (QObject obj, bool checked) override {
        close();
    }


    
	protected void on_pushButton_2_Click(QObject obj, bool checked)override{
		long item = treeWidget.getSelItem();
        if (item != 0) {
            int id = treeWidget.getItemTag(item, 0);
            
            CommonConfigure cconfig = doa[id].getConfigure();
            if (cconfig != nilptr){
                PropertyListener pl = new PropertyListener () {
                    @NotNilptr
                    String getSetting (String [] options, @NotNilptr String key) override{
                        String val = cconfig.getSetting(key);
                        if (options != nilptr){
                            return "" + options.indexOf(val);
                        }
                        return val;
                    }
                    bool setSetting (@NotNilptr String key, String val) override{
                        return cconfig.setSetting(key, val);
                    }
                };
                ComponentConfigure.showConfigure(this, cconfig.buildJsonobject(), pl);
                doa[id].updateConfigure();
            }
        }
	
	}
	
	
	
	
	public void on_treeWidget_ItemDoubleClicked(QTreeWidget,long item, int column)override {
        if (item != 0) {
            int id = treeWidget.getItemTag(item, 0);
            
            CommonConfigure cconfig = doa[id].getConfigure();
            if (cconfig != nilptr){
                PropertyListener pl = new PropertyListener () {
                    @NotNilptr
                    String getSetting (String [] options, @NotNilptr String key) override{
                        String val = cconfig.getSetting(key);
                        if (options != nilptr){
                            return "" + options.indexOf(val);
                        }
                        return val;
                    }
                    bool setSetting (@NotNilptr String key, String val) override{
                        return cconfig.setSetting(key, val);
                    }
                };
                ComponentConfigure.showConfigure(this, cconfig.buildJsonobject(), pl);
                doa[id].updateConfigure();
                tv.postUpdate();
            }
        }
	}
	/*** EndOfClass ***/
};
