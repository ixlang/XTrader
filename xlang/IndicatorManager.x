/*** Generated by xlang extension for XStudio
Tue Aug 12:53:00 2025
  ***/


class IndicatorManager : IndicatorManager_internal {

    TradingData data;
    TradingView parent;
    public IndicatorManager (TradingView w, TradingData _d) {
        data = _d;
        parent = w;
    }

    bool onInitializ() override {
        treeWidget.setColumns (new String[] {"名称", "描述"});
        treeWidget_2.setColumns (new String[] {"名称", "描述"});
        setWindowTitle("指标列表");
        setWindowIcon(AssetsManager.getResource("res/toolbar/extern.png"));
        reload();
        return true;
    }

    void reload() {
        treeWidget.clear();
        treeWidget_2.clear();
        String [] list = IndicatorSystem.getList();

        for (String s : list) {
            treeWidget.addItem (nilptr, s);
        }

        Vector<IndicatorShell> ids = data.getIndicators();

        for (IndicatorShell s : ids) {
            treeWidget_2.addItem (nilptr, s.getName() );
        }
    }

    protected void on_btnAdd_Click (QObject obj, bool checked) override {
        long item = treeWidget.getSelItem();

        if (item != 0) {
            String name = treeWidget.getItemText (item, 0);
            Class c = IndicatorSystem.getIndicatorClass (name);
            data.addIndicator (name, c, true);
            reload();
        }
    }



    protected void on_btnDel_Click (QObject obj, bool checked) override {
        long item = treeWidget_2.getSelItem();

        if (item != 0) {
            int ids = treeWidget_2.indexOfItem(item);
            if (ids != -1){
                data.removeIndicator (ids);
            }
            reload();
        }
    }



    protected void on_btnok_Click (QObject obj, bool checked) override {
        close();

    }

    public static void showComponent (TradingView parent, TradingData data) {
        IndicatorManager ctl = new IndicatorManager (parent, data);

        if (ctl.create (parent) ) {
            ctl.exec();
        }
    }

    protected void on_pushButton_Click (QObject obj, bool checked) override {
        
        long item = treeWidget_2.getSelItem();
        int n = treeWidget_2.indexOfItem (item);

        if (n != -1) {
            Vector<IndicatorShell> ids = data.getIndicators();
            CommonConfigure cconfig = ids[n].configure;
            PropertyListener pl = new PropertyListener () {
                @NotNilptr
                String getSetting (String [] options, @NotNilptr String key)override {
                    String val = cconfig.getSetting(key);
                    if (options != nilptr){
                        return "" + options.indexOf(val);
                    }
                    return val;
                }
                bool setSetting (@NotNilptr String key, String val) override{
                    return cconfig.setSetting(key, val);
                }
            };
            ComponentConfigure.showConfigure(this, cconfig.buildJsonobject(), pl);
            ids[n].refresh();
        }
    }


    
	
	public void on_treeWidget_2_ItemDoubleClicked(QTreeWidget,long item, int column)override {
        
        int n = treeWidget_2.indexOfItem (item);

        if (n != -1) {
            Vector<IndicatorShell> ids = data.getIndicators();
            CommonConfigure cconfig = ids[n].configure;
            PropertyListener pl = new PropertyListener () {
                @NotNilptr
                String getSetting (String [] options, @NotNilptr String key)override {
                    String val = cconfig.getSetting(key);
                    if (options != nilptr){
                        return "" + options.indexOf(val);
                    }
                    return val;
                }
                bool setSetting (@NotNilptr String key, String val) override{
                    return cconfig.setSetting(key, val);
                }
            };
            ComponentConfigure.showConfigure(this, cconfig.buildJsonobject(), pl);
            ids[n].refresh();
        }
	}
	
	
	/*** EndOfClass ***/
};
